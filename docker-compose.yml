version: "3.9"

networks:
  app-tier:

services:
  umami:
    container_name: umami
    image: ghcr.io/umami-software/umami:postgresql-v2.11.3
    environment:
      DATABASE_URL: postgresql://umami:umami@db:5432/umami
      DATABASE_TYPE: postgresql
      HASH_SALT: ${UMAMI_HASH_SALT}
    networks:
      - app-tier
    depends_on:
      - db
    restart: always
  db:
    image: postgres:12-alpine
    environment:
      POSTGRES_DB: umami
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - ./umami/sql/schema.postgresql.sql:/docker-entrypoint-initdb.d/schema.postgresql.sql:ro
      - ./umami/db-data/umami-db-data:/var/lib/postgresql/data
    networks:
      - app-tier
    restart: always
  website:
    container_name: website
    image: ${WEBSITE_CONTAINER_REGISTRY}/${WEBSITE_CONTAINER_URI}
    networks:
      - app-tier
    environment:
      - WEBSITE_CONTAINER_REGISTRY=${WEBSITE_CONTAINER_REGISTRY}
      - WEBSITE_CONTAINER_URI=${WEBSITE_CONTAINER_URI}
    restart: unless-stopped
  caddy:
    container_name: caddy
    image: caddy:2.8-alpine
    cap_add:
      - NET_ADMIN
    ports:
      - "80:80"
      - "443:443"
      - "443:443/udp"
    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile
      - ./caddy/data:/data
      - ./caddy/config:/config
    environment:
      - DOMAIN=${DOMAIN}
    networks:
      - app-tier
    restart: unless-stopped
    depends_on:
      - website
      - umami
