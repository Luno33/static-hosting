version: "3.9"

networks:
  app-tier:

services:
  umami:
    container_name: umami
    image: ghcr.io/umami-software/umami:postgresql-latest
    environment:
      DATABASE_URL: postgresql://umami:umami@db:5432/umami
      DATABASE_TYPE: postgresql
      HASH_SALT: replace-me-with-a-random-string
    networks:
      - app-tier
    depends_on:
      - db
    restart: always
  db:
    image: postgres:12-alpine
    environment:
      POSTGRES_DB: umami
      POSTGRES_USER: umami
      POSTGRES_PASSWORD: umami
    volumes:
      - ./umami/sql/schema.postgresql.sql:/docker-entrypoint-initdb.d/schema.postgresql.sql:ro
      - ./umami/db-data/umami-db-data:/var/lib/postgresql/data
    networks:
      - app-tier
    restart: always
  minio:
    container_name: minio
    image: bitnami/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minio-root-user
      - MINIO_ROOT_PASSWORD=minio-root-password
    volumes:
      - ./minio/data:/data
    networks:
      - app-tier
    restart: unless-stopped
  nginx:
    container_name: nginx
    image: nginx:1.23.3-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf/custom-conf:/etc/nginx/custom-conf/
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
      - ./self-signed/certs/:/etc/ssl/certs/
      - ./self-signed/private/:/etc/ssl/private/
    logging:
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - app-tier
    restart: unless-stopped
    depends_on:
      - minio
      - umami
